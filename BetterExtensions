----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Made by Stefunuk12 / GIVE Creds to him.

--Script : 

local VNSAim = loadstring(game:HttpGet("https://raw.githubusercontent.com/smiggaloodgan/RotaryEdge/main/DownLoader"))()
VNSAim.TeamCheck(false)

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local DHStngs = {
    SilentAim = false,
    AimLock = false,
    Prediction = 0.14,
    AimLockKeybind = Enum.KeyCode.E
}
getgenv().DHStngs = DHStngs

function VNSAim.Check()
    if not (VNSAim.Enabled == true and VNSAim.Selected ~= LocalPlayer and VNSAim.SelectedPart ~= nil) then
        return false
    end

    local Character = VNSAim.Character(VNSAim.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    if (KOd or Grabbed) then
        return false
    end

    return true
end

local __index
__index = hookmetamethod(game, "__index", function(t, k)
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and VNSAim.Check()) then
        local SelectedPart = VNSAim.SelectedPart

        if (DHStngs.SilentAim and (k == "Hit" or k == "Target")) then
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DHStngs.Prediction)

            return (k == "Hit" and Hit or SelectedPart)
        end
    end

    return __index(t, k)
end)

RunService:BindToRenderStep("AimLock", 0, function()
    if (DHStngs.AimLock and VNSAim.Check() and UserInputService:IsKeyDown(DHStngs.AimLockKeybind)) then
        local SelectedPart = VNSAim.SelectedPart

        local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DHStngs.Prediction)

        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
    end
    end)
